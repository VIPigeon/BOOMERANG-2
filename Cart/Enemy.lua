Enemy = table.copy(Body)

function Enemy:new(x, y)
    local obj = {
        sprite = data.Enemy.sprites.defaultSprite,
        x = x,
        y = y,
        flip = 0,

        hitbox = Hitbox:new(x, y, x + 8, y + 8),

        hp = data.Enemy.defaultHP,
        isEnemy = true,
        currentAnimations = {},

        isActive = false, -- –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –≤ –∑–æ–Ω—É –≤—Ö–æ–¥–∏—Ç –∏–≥—Ä–æ–∫
    }

    setmetatable(obj, self)
    self.__index = self
    return obj
end

function Enemy:_drawAnimations()
    for _, anime in ipairs(self.currentAnimations) do
        anime:play()
    end
end

function Enemy:_focusAnimations()
    local center = self.hitbox:get_center()
    local width = self.hitbox:getWidth()
    local height = self.hitbox:getHeight()
    -- —á—Ç–æ–±—ã –∞–Ω–∏–º–∞—Ü–∏—è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–ª–∞—Å—å –≤–æ–∫—Ä—É–≥ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ

    local x1 = center.x - width
    local x2 = center.x
    local y1 = center.y - height
    local y2 = center.y 
    for _, anime in ipairs(self.currentAnimations) do
        anime:focus(x1, y1, x2, y2)
    end
end

function Enemy:draw()
    self.sprite:draw(self.x - gm.x*8 + gm.sx, self.y - gm.y*8 + gm.sy, self.flip, self.rotate)

    self:_drawAnimations()
end

function Enemy:update()
    if game.boomer.hitbox:collide(self.hitbox) then
        local damage = game.boomer.dpMs * Time.dt()
        self:takeDamage(damage)
    end
    
    if self:isDeadCheck() then
        self:die()
    end

    self:_focusAnimations()

    if not self.isActive then
        return
    end
end

function Enemy:die()
    -- –≠—Ç–æ —Å–∞–º—ã–π –¥—Ä–µ–≤–Ω–∏–π trace –≤ –Ω–∞—à–µ–π –∫–æ–¥–æ–≤–æ–π –±–∞–∑–µ! ü¶ñ
    trace("I AM DEAD!!!")
    if self.deathSound ~= nil then
        local sound = self.deathSound
        sfx(sound[1], sound[2], sound[3], sound[4], sound[5], sound[6])
    else
        trace('–í–æ–∑–º–æ–∂–Ω–æ –æ—à–∏–±–∫–∞: –£ –≤—Ä–∞–≥–∞ –Ω–µ—Ç—É –∑–≤—É–∫–∞ —Å–º–µ—Ä—Ç–∏')
    end
    table.removeElement(game.updatables, self)
    table.removeElement(game.drawables, self)
    table.removeElement(game.collideables, self)
end

function Enemy:isDeadCheck()
    return self.hp == 0
end

function Enemy:takeDamage(damage)
    table.insert(self.currentAnimations,
        AnimationOver:new(table.chooseRandomElement(data.Enemy.sprites.hurtEffect), 'randomOn', 'activeOnes')
    )
    -- —ç—Ç–æ –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è –Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ

    self.hp = math.fence(self.hp - damage, 0, self.hp)

    if self.hp >= 0 and self.damageSound ~= nil then
        -- kawaii-Code@boomerang2.com:
        -- –Ø —Å–Ω–∞—á–∞–ª–∞ –∫–æ–ø–∏–ø–∞—Å—Ç–∏–ª –∫–æ–¥ –∑–≤—É–∫–∞ –≤ update –∫–∞–∂–¥–æ–º—É –≤—Ä–∞–≥—É –æ—Ç–¥–µ–ª—å–Ω–æ, –∏ –≤–æ—Ç
        -- –∫–∞–∫–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —è –ø—Ä–∏ —ç—Ç–æ–º –æ—Å—Ç–∞–≤–ª—è–ª (–≤ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ):
        --
        -- 1. –ê –º–æ–∂–µ—Ç —ç—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ takeDamage?
        --
        -- 2. –ù—É, –ø–æ-—Ö–æ—Ä–æ—à–µ–º—É –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å, —á—Ç–æ–±—ã –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∞–∂–Ω—ã–π –∫–æ–¥.
        --
        -- 3. –ú–æ–∂–Ω–æ –¥–∞–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–º–µ—Å—Ç–æ EnemyDeathSounds EnemyConfig!
        -- –¢–æ–≥–¥–∞ takeDamage –±—É–¥–µ—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º –¥–ª—è –≤—Å–µ—Ö! –ö–∞–∫–∞—è –æ—Ç–ª–∏—á–Ω–∞—è
        -- –∏–¥–µ—è! üòä

        if game.metronome.beat16 then
            -- –≠—Ç–æ—Ç –∫–æ–¥ —É –º–µ–Ω—è –∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–ª—Å—è!!! –ß—Ç–æ? üò´
            -- local sound game.soundsQueue:dequeue()
            local sound = self.damageSound
            sfx(sound[1], sound[2], sound[3], sound[4], sound[5], sound[6])
        end
    end

end
